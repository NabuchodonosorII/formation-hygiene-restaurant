# Nom du workflow
name: Déploiement Material for MkDocs sur GitHub Pages (avec uv)

# Déclenche le workflow lors d'un push sur la branche 'main'
on:
  push:
    branches:
      - main # Déclenche sur la branche principale

# Permissions nécessaires pour le workflow
permissions:
  contents: write # Permet d'écrire dans le dépôt (nécessaire pour la branche gh-pages)
  pages: write # Permet de déployer sur GitHub Pages
  id-token: write # Nécessaire pour les déploiements OIDC sur GitHub Pages

# Jobs du workflow
jobs:
  deploy:
    runs-on: ubuntu-latest # Exécute le job sur une machine virtuelle Ubuntu

    steps:
      # Étape 1: Cloner le dépôt
      - name: Checkout du dépôt
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Récupère tout l'historique pour mkdocs gh-deploy

      # Étape 2: Configurer les informations d'identification Git
      # Nécessaire pour que mkdocs gh-deploy puisse commiter sur gh-pages
      - name: Configurer les informations d'identification Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Étape 3: Configurer Python
      - name: Configuration de Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x # Utilise la dernière version de Python 3

      # Étape 4: Installer uv
      - name: Installation de uv
        run: pip install uv # uv n'est pas toujours préinstallé sur les runners GitHub Actions

      # Étape 5: Gérer le cache pour les dépendances uv
      # Cela permet d'accélérer les builds successifs
      - name: Calcul de l'ID du cache
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV # L'ID du cache change chaque semaine UTC
      - name: Cache des dépendances uv
        uses: actions/cache@v4
        with:
          key: uv-cache-${{ env.cache_id }}-${{ hashFiles('uv.lock') }} # Cache basé sur uv.lock
          path: ~/.cache/uv # Chemin par défaut du cache global de uv
          restore-keys: |
            uv-cache-

      # Étape 6: Installer Material for MkDocs et les dépendances avec uv
      # Si vous avez un fichier requirements.txt ou pyproject.toml avec des dépendances,
      # uv install les installera. Si vous n'avez que mkdocs-material, on peut le spécifier.
      - name: Installation des dépendances avec uv
        # Option 1: Si vous avez un fichier uv.lock et/ou pyproject.toml qui liste les dépendances
        # run: uv sync # ou uv install si vous préférez installer toutes les dépendances du pyproject.toml
        # Option 2: Si vous voulez juste installer mkdocs-material
        run: uv pip install mkdocs-material

      # Étape 7: Déployer le site sur GitHub Pages
      # mkdocs gh-deploy construit le site et le pousse sur la branche gh-pages
      # Comme mkdocs est installé dans l'environnement uv, nous devons l'exécuter via uv run
      - name: Déploiement du site
        run: uv run mkdocs gh-deploy --force # --force écrase l'historique précédent de gh-pages
